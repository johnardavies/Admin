
########### Some useful command line commands ###########################################################################################

########## Finding information on files ################################################################################################

# list file info in date order 
$ ls -lt

# Number of files in folder (-l gives line count)
$ ls | wc -l

#Gets the 10 largest files sorted by size (du -h gives disk usage -h tag for readable format) (sort-nr tags is numeric reverse order)
$ du -h | sort -nr | head -n 10

#Lists the file types in a directory labelled dir. Loops through file names, gets the 2nd field and sorts for unique file types
$ for file in dir/*; do file "$file" | cut -d: -f 2; done | sort -u

# Find the location of all files in the current directory (indicated by . prefix) with a certain extension. In this case txt files
$ find . -type f -name "*.txt"

# Counts the number of text files in a folder that contain a given word - in this example "test".
# -i makes the grep case insensitive, -l makes the grep output filenames only. This is then piped to wc -l where the -l gives line count
$ grep -i -l "test" folder_location/*.txt |  wc -l

########## Moving files #################################################################################################################

# copies all the files in one folder with a .doc extension to a new directory labelled backup
$ cp *.doc /filepath/backup

############ Changing files #############################################################################################################

# Remove blank lines from a file
$ sed '/^$/d'  file.txt >  file_noblanks.txt

# Extracting text from pdf files in a folder (requires sudo apt install poppler-utils and sudo apt install calibre)

$ for file in *.pdf; do pdftotext -layout "$file"; done

########### Setting file permissions ####################################################################################################

$ chmod (user|group|other) file

add the numbers below to get permissions
4 stands for "read", 2 stands for "write",1 stands for "execute", and 0 stands for "no permission
e.g. chmod 700 file gives read, write, execute for the user. No permissions for anyone else

############# Cron jobs #################################################################################################################

# Accessing the cron tab to edit the jobs
$ crontab -e
# Cronjob
 ***** /path/to/script.sh   #This version runs every minute
 Minute, Hour, Day of Month, Month of Year, Day of week
 
# List cronjobs
$ crontab -l

# Check when the jobs have been run by searching syslog
$ grep CRON /var/log/syslog

############ Zipping and Unzipping files ################################################################################################

#unzip a compressed .gz file
$ gunzip archive.gz 

#unzip a tar file
$ tar -xvf file.tar

#unzip a Winzip file 
$ unzip file.zip (To unzip all files in a folder $ unzip "*.zip" )

# Copies a zipped music file that you have just downloaded to the music folder and unzips
$ cd /c/users/user_name/downloads
$ latest_album=$(ls -Art | tail -n 1)
$ mv $latest_album /c/users/user_name/music
$ cd /c/users/user_name/music
$ unzip $latest_album

########### Encrypting (and decrypting) files ##########################################################################################################

#encrypt a file with gpg
$ gpg -e -r username file
 
#and decrypt
$ gpg -o outputfile encryptedfile

########### Backing up ####################################################################################################################

#Backs up the text file text.txt to the pi external drive. -avz stands for archive (a), verbose (v), z (compress)
$ rsync -avz text.txt pi@ip_address:/mnt/my_external_drive

########### Remote logins ##############################################################################################################

#Sets up a key for passwordless login (The public key having already been installed on a remote machine with ssh-copy-id)
local_machine:~$ ssh-agent $SHELL
local_machine:~$ ssh-add  #Prompts for the password of the SSH key that you want to add
local_machine:~$ ssh-agent 
local_machine:~$ ssh-add -L #Checks it has been added

########### API calls ##################################################################################################################

#API call returned in nicely formatted json
$ curl -s http_request | jq '.'

######## Some programme specific commands #############################################################################################

#Updating additions to data folder in opencloud from the command line
$ sudo -u www-data php occ files:scan --all

# Writing an openstreetmap query to a separate file query.osm and running it from the command line  
echo "data=node[name=\"Gielgen\"];out;" >query.osm
wget -O target.osm --post-file=query.osm "http://overpass-api.de/api/interpreter"

# Command line to inspect sqlite database
$ sqlite3 database.db
sqlite> .tables    # List the tables in the database
sqlite> .mode line  # Viewing mode, others are column and list
sqlite> select * from table ; # selects the data in a table

######## Logs and logins #############################################################################################################

# Most recent log data 
$ tail /var/log/auth.log

# Failed password logins
$ grep "Failed password" /var/log/auth.log






